---
const model = "Glorious GMMK"
const switches = "Gateron Brown"
const layout = "Canary"
---
<section id="specs" class="flex">
    <img src="/icons/glorious.svg" alt="model"> <span class="flex column">Model <small class="grey">{model}</small></span><hr>
    <img class="invert-white" src="/icons/switch.svg" alt="switch"> <span class="flex column">Switch <small class="grey">{switches}</small></span><hr>
    <img class="invert-white" src="/icons/keyboard.svg" alt="layout"> <span class="flex column">Layout <small class="grey">{layout}</small></span>
</section>
<section id="details" class="flex" style="justify-content: space-between;">
    <section id="statistics">
        <h2>statistics</h2>
        <ul class="badge__list">
            <li>Passed <b><span id="passedElement">0000</span></b> tests <span class="accent">‚úî</span></li>
            <li>Failed <b><span id="failedElement">00000</span></b> tests <span class="brand">ùê±</span></li>
            <li>Typed <b><span id="timeElement">00</span></b> hours <span class="grey">‚è∞</span></li>
        </ul>
    </section>
    <section id="speed">
        <h2>speed</h2>
        <ul class="badge__list">
            <li><span class="badge badge--item">QWERTY</span> <b><span id="qwerty">000</span></b> wpm <span class="grey">‚å®</span></li>
            <li><span class="badge badge--item">Canary</span> <b><span id="canary">00</span></b> wpm <span class="grey">‚å®</span></li>
        </ul>
    </section>
</section>

<style>
    #specs {
        font-family: var(--body);
        padding-top: 15px;
        align-self: center;
    }

    .flex > img { padding: 0 12px; }

    @media only screen and (max-width: 600px) {
        hr { margin-left: 12px; }
    }
</style>

<script>
    function secondsToHours(seconds: number) { return seconds / 3600; }
    
    async function getMonkeyData() {
        try {
            const response = await fetch("https://api.bayrock.dev/monkeytype.json");

            if (!response.ok)
                throw new Error(`Error: ${response.status} - ${response.statusText}`);

            return await response.json();
        } catch (error: any) {
            console.error(error);
        }
    }

    async function updateData() {
        // Get data
        const { qwerty, canary } = await getMonkeyData();
        const completedTests = qwerty.stats.completedTests + canary.stats.completedTests;
        const failedTests = (qwerty.stats.startedTests + canary.stats.startedTests) - completedTests;
        const timeTyping = Math.ceil(secondsToHours(qwerty.stats.timeTyping + canary.stats.timeTyping));
        const qwertyWPM = Math.ceil(qwerty.bests.words[10][0].wpm);
        const canaryWPM = Math.ceil(canary.bests.words[10][0].wpm);

        // Get elements
        const passedElement = document.getElementById("passedElement");
        const failedElement = document.getElementById("failedElement");
        const timeElement = document.getElementById("timeElement");
        const qwertyElement = document.getElementById("qwerty");
        const canaryElement = document.getElementById("canary");
        
        // Set data to elements
        if (passedElement) passedElement.innerHTML = completedTests;
        if (failedElement) failedElement.innerHTML = failedTests;
        if (timeElement) timeElement.innerHTML = timeTyping;
        if (qwertyElement) qwertyElement.innerHTML = qwertyWPM;
        if (canaryElement) canaryElement.innerHTML = canaryWPM;
    }

    updateData();
    document.addEventListener('astro:after-swap', updateData);
</script>
